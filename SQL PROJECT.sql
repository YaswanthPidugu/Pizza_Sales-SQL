
USE PIZZA_SALES;

SELECT * FROM PIZZAS;
SELECT * FROM PIZZA_TYPES;
SELECT*FROM ORDERS;
SELECT*FROM ORDER_DETAILS;

CREATE TABLE ORDERS(
ORDER_ID INT NOT NULL PRIMARY KEY,
ORDER_DATE DATETIME NOT NULL,
ORDER_TIME TIME NOT NULL);

CREATE TABLE ORDER_DETAILS(
ORDER_DETAILS_ID INT NOT NULL PRIMARY KEY,
ORDER_ID INT NOT NULL,
PIZZA_ID TEXT NULL,
QUANTITY INT NOT NULL);

-- Retrieve the total number of orders placed.
SELECT * FROM ORDER_DETAILS;
SELECT COUNT(ORDER_ID) AS TOTAL_ORDERS FROM ORDERS;


-- Calculate the total revenue generated from pizza sales.
SELECT
ROUND(SUM(O.QUANTITY*P.PRICE),2) AS TOTAL_REVENUE
FROM ORDER_DETAILS O
JOIN PIZZAS P
ON O.PIZZA_ID=P.PIZZA_ID;

-- Identify the highest-priced pizza.

SELECT T.NAME , P.PRICE
FROM PIZZA_TYPES T
JOIN PIZZAS P
ON T.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
ORDER BY P.PRICE DESC LIMIT 1 ; 

-- Identify the most common pizza size ordered.

SELECT COUNT(O.ORDER_DETAILS_ID) AS TOTAL_ORDER_ID ,P.SIZE
FROM ORDER_DETAILS O
JOIN PIZZAS P 
ON O.PIZZA_ID = P.PIZZA_ID GROUP BY SIZE ORDER BY TOTAL_ORDER_ID DESC ;


-- List the top 5 most ordered pizza types along with their quantities.

SELECT T.NAME, SUM(QUANTITY) AS TOTAL_QTY
FROM ORDER_DETAILS O
JOIN PIZZAS P
JOIN PIZZA_TYPES T
ON O.PIZZA_ID = P.PIZZA_ID AND P.PIZZA_TYPE_ID = T.PIZZA_TYPE_ID 
GROUP BY NAME ORDER BY TOTAL_QTY DESC LIMIT 5 ;



-- Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT T. CATEGORY, SUM(QUANTITY) AS TOTAL_QTY
FROM ORDER_DETAILS O
JOIN PIZZAS P
JOIN PIZZA_TYPES T
ON O.PIZZA_ID = P.PIZZA_ID AND P.PIZZA_TYPE_ID = T.PIZZA_TYPE_ID 
GROUP BY CATEGORY ORDER BY TOTAL_QTY DESC;

-- Determine the distribution of orders by hour of the day.

SELECT hour(ORDER_TIME) AS HOUR, COUNT(ORDER_ID) AS TOTAL_ORDERS 
FROM ORDERS GROUP BY hour(ORDER_TIME);

-- Join relevant tables to find the category-wise distribution of pizzas.

SELECT CATEGORY, COUNT(NAME) FROM PIZZA_TYPES GROUP BY CATEGORY;


-- Group the orders by date and calculate the average number of pizzas ordered per day.
SELECT ROUND(AVG(QUANTITY),0) as avg_pizzas_order_perday FROM
(SELECT O.ORDER_DATE , SUM(QUANTITY) AS QUANTITY
FROM ORDERS O 
JOIN ORDER_DETAILS D
ON O.ORDER_ID = D.ORDER_ID GROUP BY O.ORDER_DATE) AS ORDER_QUANTITY;


-- Determine the top 3 most ordered pizza types based on revenue.

SELECT T.NAME, SUM(QUANTITY*PRICE) AS REVENUE
FROM PIZZA_TYPES T
JOIN PIZZAS P
JOIN ORDER_DETAILS O
ON T.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID AND P.PIZZA_ID = O.PIZZA_ID 
GROUP BY NAME  ORDER BY REVENUE DESC LIMIT 3;


-- Calculate the percentage contribution of each pizza type to total revenue.

SELECT T.CATEGORY ,ROUND(SUM(O.QUANTITY*P.PRICE) /
(SELECT
ROUND(SUM(O.QUANTITY*P.PRICE),2) AS TOTAL_REVENUE
FROM ORDER_DETAILS O
JOIN PIZZAS P
ON O.PIZZA_ID=P.PIZZA_ID)*100,2) AS REVENUE
FROM PIZZA_TYPES T
JOIN PIZZAS P
JOIN ORDER_DETAILS O
ON T.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID AND P.PIZZA_ID = O.PIZZA_ID 
GROUP BY CATEGORY ORDER BY REVENUE DESC;

-- Calculate the percentage contribution of each pizza type to total revenue.

SELECT T.CATEGORY,ROUND(SUM(QUANTITY*PRICE)/
(SELECT ROUND(SUM(O.QUANTITY*P.PRICE),2)
FROM ORDER_DETAILS O 
JOIN PIZZAS P 
ON O.PIZZA_ID = P.PIZZA_ID)*100,2) AS REVENUE
FROM PIZZA_TYPES T
JOIN PIZZAS P
JOIN ORDER_DETAILS O
ON T.PIZZA_TYPE_ID=P.PIZZA_TYPE_ID AND P.PIZZA_ID=O.PIZZA_ID 
GROUP BY T.CATEGORY ORDER BY REVENUE DESC ;


-- Analyze the cumulative revenue generated over time.
SELECT ORDER_DATE,
SUM(REVENUE) OVER(ORDER BY ORDER_DATE) AS CUM_REVENUE
FROM
(SELECT O. ORDER_DATE , ROUND(SUM(QUANTITY*PRICE),2) AS REVENUE
FROM ORDERS O
JOIN ORDER_DETAILS D
JOIN PIZZAS P
ON O.ORDER_ID = D.ORDER_ID AND D.PIZZA_ID = P.PIZZA_ID 
GROUP BY ORDER_DATE) AS SALES;

-- Determine the top 3 most ordered pizza types based on revenue for each pizza category.
SELECT CATEGORY,NAME, REVENUE,
RANK() OVER(PARTITION BY CATEGORY ORDER BY REVENUE DESC) AS RN
FROM 
(SELECT T.CATEGORY ,T.NAME , SUM(QUANTITY*PRICE) AS REVENUE
FROM PIZZA_TYPES T
JOIN PIZZAS P
JOIN ORDER_DETAILS O 
ON T.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID AND P.PIZZA_ID = O.PIZZA_ID 
GROUP BY T.CATEGORY ,T.NAME ) SALES;













